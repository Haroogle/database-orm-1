generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket    Ticket[]
}

model Contact {
  id         Int      @id @default(autoincrement())
  customerId Int      @unique
  phone      String
  email      String
  createdAt  DateTime @default(now())
  updated    DateTime @updatedAt
  customer   Customer @relation(fields: [customerId], references: [id])
}

model Movie {
  id          Int      @id @default(autoincrement())
  title       String
  runtimeMins Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  screening Screening[]
}

model Screening {
  id   Int      @id @default(autoincrement())
  movieId Int? @unique
  screenId Int? @unique
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movie Movie? @relation(fields: [movieId], references: [id])
  screen Screen? @relation(fields: [screenId], references: [id])
  ticket Ticket[]
}

 model Screen {
  id Int  @id @default(autoincrement())
  number Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  screening Screening[]
}

model Ticket {
  id Int @id @default(autoincrement())
  customerId Int? @unique
  screeningId Int? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  customer Customer? @relation(fields: [customerId], references: [id])
  screening Screening? @relation(fields: [screeningId], references: [id])
}